{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "RestResource1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "union1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "externalCall1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"source1 derive() ~> derivedColumn1",
				"union1 alterRow() ~> AlterRow1",
				"exists1, source1 union(byName: true)~> union1",
				"surrogateKey1, source1 exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"externalCall1 keyGenerate(output({undefined} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"derivedColumn1 call(output(",
				"          headers as [string,string],",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true) ~> externalCall1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     insertHttpMethod: 'POST',",
				"     deleteHttpMethod: 'DELETE',",
				"     upsertHttpMethod: 'PUT',",
				"     updateHttpMethod: 'PATCH',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     requestFormat: ['type' -> 'json'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}